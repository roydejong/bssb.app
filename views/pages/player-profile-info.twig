{% extends "pages/player-profile.base.twig" %}

{% block innerContent %}
    <div class="row {% if isDedicatedServer %}-is-server{% endif %}">

        <section class="block">
            <div class="title">
                <i class="mdi mdi-account-circle"></i>
                <h3>Info</h3>
            </div>
            <div class="inner">
                <table class="card-table -fully-rounded table table-bordered">
                    <tbody>
                    <tr>
                        <th scope="row">Player Type</th>
                        <td>{{ player.describeType() }}</td>
                    </tr>
                    {% if player.platformType %}
                        <tr>
                            <th scope="row">Platform</th>
                            <td>
                                {% if player.platformType == "steam" %}
                                    <i class="mdi mdi-steam"></i>
                                    <span>Steam</span>
                                {% elseif player.platformType == "oculus" %}
                                    {% include "oculus_icon.twig"%}
                                    <span>Oculus</span>
                                {% else %}
                                    {{ player.platformType }}
                                {% endif %}
                            </td>
                        </tr>
                    {% endif %}
                    <tr>
                        <td colspan="2"><hr /></td>
                    </tr>
                    <tr>
                        <th scope="row">First Seen</th>
                        <td>{{ player.firstSeen.format("F Y") }}</td>
                    </tr>
                    <tr>
                        <th scope="row">Last Seen</th>
                        {% if activeNow %}
                            <td>
                                <div class="active-lamp -on"></div>
                                <span>Active now {% if currentGame %}in <a href="{{ currentGame.getWebDetailUrl() }}">{{ currentGame.gameName }}</a>{% endif %}</span>
                            </td>
                        {% else %}
                            <td>{{ player.lastSeen.format('r')|timeago_html|raw }}</td>
                        {% endif %}
                    </tr>
                    <tr>
                        <th scope="row">Lobbies Hosted</th>
                        <td>{{ stats.hosts|number_format(0, '', ',') }}</td>
                    </tr>
                    {% if not isDedicatedServer %}
                        <tr>
                            <th scope="row">Lobbies Joined</th>
                            <td>{{ stats.joins|number_format(0, '', ',') }}</td>
                        </tr>
                        <tr>
                            <td colspan="2"><hr /></td>
                        </tr>
                        <tr>
                            <th scope="row">Levels Played</th>
                            <td>{{ stats.plays|number_format(0, '', ',') }}</td>
                        </tr>
                        <tr>
                            <th scope="row">Total Score</th>
                            <td>{{ stats.totalScore|number_format(0, '', ',') }}</td>
                        </tr>
                        <tr>
                            <th scope="row">Good / Bad / Miss Cuts</th>
                            <td class="-gbm">
                                <span {% if stats.goodCuts > 0 %}class="g"{% endif %}>{{ stats.goodCuts|number_format(0, '', ',') }}</span> /
                                <span {% if stats.badCuts > 0 %}class="b"{% endif %}>{{ stats.badCuts|number_format(0, '', ',') }}</span> /
                                <span {% if stats.missCount > 0 %}class="m"{% endif %}>{{ stats.missCount|number_format(0, '', ',') }}</span>
                            </td>
                        </tr>
                        <tr>
                            <th scope="row">Hit Accuracy</th>
                            <td>{{ stats.hitAcc|number_format(2, '.', '') }}%</td>
                        </tr>
                        <tr>
                            <th scope="row">Max Combo</th>
                            <td>{{ stats.maxCombo|number_format(0, '', ',') }}</td>
                        </tr>
                    {% endif %}
                    </tbody>
                </table>
            </div>
        </section>

        {% if not isDedicatedServer %}
            <section class="block">
                <div class="title">
                    <i class="mdi mdi-account"></i>
                    <h3>Avatar</h3>
                </div>
                <div class="avatar-container">
                    <div id="avatar-render"></div>
                </div>
            </section>
        {% endif %}

        {% if isDedicatedServer %}
            <section class="block -shrink">
                <div class="title">
                    <i class="mdi mdi-server"></i>
                    <h3>Dedicated server</h3>
                </div>
                <div class="inner -limited-width">
                    {% if player.type.value == "dedicated_server_gamelift" %}
                        <p><i class="mdi mdi-check-decagram"></i> <strong>This is an official dedicated server provided by Beat Games / Oculus. It only supports vanilla, unmodded content.</strong></p>
                        <p>They are deployed on-demand via <a href="https://aws.amazon.com/gamelift/" target="_blank">Amazon GameLift</a>.</p>
                    {% elseif player.type.value == "dedicated_server_beattogether" %}
                        <p><strong>This is an instance of a BeatTogether dedicated server.</strong></p>
                        <p>BeatTogether is an open-source project that provides a master server and fleet of dedicated servers to the modding community. Various communities run their own instances.</p>
                        <p><a href="https://github.com/BeatTogether" target="_blank"><i class="mdi mdi-github"></i> BeatTogether on GitHub</a></p>
                        <p><a href="https://discord.com/invite/gezGrFG4tz" target="_blank"><i class="mdi mdi-discord"></i> BeatTogether Community on Discord</a></p>
                    {% elseif player.type.value == "dedicated_server_beatupserver" %}
                        <p><strong>This is an instance of a BeatUpServer dedicated server.</strong></p>
                        <p>BeatUpServer is an open-source project that provides a master server and fleet of dedicated servers to the modding community.</p>
                        <p><a href="https://github.com/rcelyte/BeatUpRcelyte" target="_blank"><i class="mdi mdi-github"></i> BeatUpRcelyte on GitHub</a></p>
                    {% elseif player.type.value == "dedicated_server_beatdedi" %}
                        <p><strong>This is an instance of a BeatDedi server.</strong></p>
                        <p>BeatDedi is a standalone open-source dedicated server that can host lobbies directly on the server browser without a master server.</p>
                        <p><a href="https://github.com/roydejong/BeatDedi" target="_blank"><i class="mdi mdi-github"></i> BeatDedi on GitHub</a></p>
                    {% else %}
                        <p>Hmm. We don't know what kind of server this is yet. It's a mystery!</p>
                    {% endif %}
                </div>
            </section>
        {% endif %}

    </div>

    {% if player.profileBio %}
        <section class="block">
            <div class="title">
                <i class="mdi mdi-text"></i>
                <h3>Player bio</h3>
            </div>
            <div class="inner -textarea-fill -no-shadow">
                <textarea readonly name="profileBio">{{ player.profileBio }}</textarea>
            </div>
        </section>
    {% endif %}

{% endblock %}

{% block scriptsHead %}
    {% if not isDedicatedServer %}
        <script src="/static/bsavatar/BeatSaberAvatar.js" async defer
                onload="window.dispatchEvent(new CustomEvent('BeatSaberAvatarLoaded'));"></script>
    {% endif %}
{% endblock %}

{% block scriptsBody %}
    {% if not isDedicatedServer %}
        <script>
            window.didAvatarInit = false;
            window.tryInitAvatar = function() {
                if (typeof BeatSaberAvatar === "undefined")
                    return;

                {% if avatarData %}
                const avatarData = {{ avatarData|json_encode|raw }};
                {% else %}
                const avatarData = {
                    headTopId: "None",
                    glassesId: "None",
                    facialHairId: "None",
                    handsId: "BareHands",
                    clothesId: "None",
                    clothesPrimaryColor: "#000",
                    clothesSecondaryColor: "#111",
                    clothesDetailColor: "#222",
                    skinColorId: "Alien",
                    eyesId: "QuestionMark"
                };
                {% endif %}

                if (window.didAvatarInit) {
                    window.avatarRenderer.setAvatarData(avatarData);
                    return;
                }

                const renderTarget = document.getElementById('avatar-render');

                window.avatarRenderer = BeatSaberAvatar.setup(renderTarget, avatarData, {
                    assetsBaseDir: "/static/bsavatar/",
                    enableControls: true,
                    rotateAnimation: true,
                    allowRandomize: false,
                    enableGlasses: true,
                    enableFacialHair: true,
                    initialZoomLevel: 1.25
                });
                window.didAvatarInit = true;
            };

            window.addEventListener('load', window.tryInitAvatar);
            window.addEventListener('turbo:load', window.tryInitAvatar);
            window.addEventListener('BeatSaberAvatarLoaded', window.tryInitAvatar);
        </script>
    {% endif %}
{% endblock %}